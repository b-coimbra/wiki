* Design Patterns

  Design Patterns in the object oriented world is a reusable solution to common software
  design problems that occur repeatedly in real-world application development.
  
  Essentially, it's a template or description for how to solve problems that can be used in many situations.

  /A pattern is a recurring solution a problem in context./
  
  - There are =23= design patterns, also known as Gang of Four (GoF) in design patterns.
  - These 23 patterns are grouped into three main categories:

** Creational Design Pattern

*** Factory Method
    
    This creates a set of related objects or dependent objects.

    - An abstract factory pattern acts as a super-factory that creates other factories.
    - An abstract factory interface is responsible for creating a set of related objects or dependent objects
      without specifying their concrete classes.
      
    *Basically, think in terms of abstracting the methods and properties of a UML diagram*

*** Abstract Factory

*** Builder

*** Prototype

*** Singleton

** Structural Design Patterns

*** Adaptive

*** Bridge

*** Composite

*** Decorator

*** Facade

*** Flyweight

*** Proxy

** Behavioral Design Patterns

*** Chain of Responsibility

*** Command

*** Interpreter

*** Iterator 

*** Mediator

*** Memento

*** Observer

*** State

*** Strategy

*** Visitor

*** Template Method
