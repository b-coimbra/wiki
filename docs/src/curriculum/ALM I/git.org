* GIT
** Cheatsheet

   | Command                              | Description                                                        |
   |--------------------------------------+--------------------------------------------------------------------|
   | ~git checkout -b <new-branch>~       | Creates a new branch                                               |
   | ~git branch -a~                      | Lists all branches                                                 |
   | ~git fetch --all~                    | Fetch all branches                                                 |
   | ~git branch -d <branch>~             | Delete a local branch (-D forces )                                 |
   | ~git push origin :branch-name~       | Delete a remote branch                                             |
   | ~git rebase -i HEAD~n~               | squash various commits (where n is the number of commits you made) |
   | ~git commit --amend~                 | substitutes the commit message with the previous one               |
   | ~git push origin <branch> -f~        | force stuff into ur own branch (up)                                |
   | ~git rebase --continue~              | after solving a rebase                                             |
   | ~git reset origin/develop -- <file>~ | substitute a local file to the develop branch                      |
   | ~git add -u~                         | stage only modified files                                          |

   =HEAD= is a reference to the last commit in hte currently check-out branch
   
** Rebase

   ~$ git checkout <branch>~
   followed by:
   ~$ git rebase <branch>~
   where =<branch>= can be *master*
  
** Merge

   ~$ git checkout master~
   then:
   ~$ git merge <branch>~
  
